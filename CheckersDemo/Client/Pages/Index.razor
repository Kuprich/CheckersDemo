@page "/"
@using CheckersDemo.Shared
@using Microsoft.AspNetCore.SignalR.Client;

@code {
    HubConnection hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:44314/connect")
            .Build();

    bool inGame = false;
    bool isWhitePlayer = true;

    protected override async Task OnInitializedAsync()
    {
        await RefreshTables();
    }

    async Task RefreshTables()
    {
        HttpClient httpClient = new();
        tables = await httpClient.GetFromJsonAsync<List<string>>("https://localhost:44314/Checkers/GetTables") ?? new();
    }
    string tableId = "";

    async Task CreateGame()
    {
        await hubConnection.StartAsync();
        tableId = Guid.NewGuid().ToString();
        await hubConnection.SendAsync(HubMethodNames.CreateTable, tableId);
        inGame = true;
        isWhitePlayer = true;
    }

    List<string> tables = new();

    async Task JoinGame(string tableId)
    {
        this.tableId = tableId;
        await hubConnection.StartAsync();
        await hubConnection.SendAsync(HubMethodNames.JoinTable, tableId);
        inGame = true;
        isWhitePlayer = false;
    }
}


@if (inGame)
{
    <CheckersBoardComponent HubConnection="hubConnection" TableId="@tableId" IsWhitePlayer="isWhitePlayer" />
}
else
{
    <button @onclick="CreateGame">Create Game</button>

    foreach (var table in tables)
    {
        <div>
            <button @onclick="() => JoinGame(table)">Join Game @table</button>
        </div>
    }
}





@if (Checker != null)
{
    <div class="checker_container">
        <div @onclick="() => OnCheckerClicked(Checker)" class="checker checker-@(Checker.IsWhite ? "white" : "black" ) @(IsEnabled ? "checker-enabled": "") @(IsActive ? "checker-active": "") @(Checker.Direction == CheckerDirection.Both ? "checker-king" : "")">

            @if (IsJumped)
            {
                <span>J</span>
            }
        </div>
    </div>

}


@code {
    [Parameter]
    public Checker? Checker { get; set; }

    [Parameter]
    public bool IsEnabled { get; set; }

    [Parameter]
    public bool IsJumped { get; set; }

    [Parameter]
    public bool IsActive { get; set; }

    [Parameter]
    public EventCallback<Checker> CheckerClicked { get; set; }

    private async Task OnCheckerClicked(Checker checker)
    {
        await CheckerClicked.InvokeAsync(checker);
    }
}
